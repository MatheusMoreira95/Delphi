unit uCadCategoria;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, UTelaHeranca, Data.DB,
  ZAbstractRODataset, ZAbstractDataset, ZDataset, Vcl.DBCtrls, Vcl.Grids,
  Vcl.DBGrids, Vcl.StdCtrls, Vcl.Buttons, Vcl.Mask, Vcl.ExtCtrls, Vcl.ComCtrls,uDTMConexao,
  cCadCategoria,UEnum;

type
  TfrmCadCategoria = class(TfrmTelaHeranca)
    qryListagemcategoriaID: TIntegerField;
    qryListagemdescricao: TWideStringField;
    edtCodigoId: TLabeledEdit;
    edtDescricao: TLabeledEdit;
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
  private
    oCategoria: TCategoria;
    function APagar:Boolean; override;
    function Gravar(EstadoDoCadastro : TEstadoDoCadastro) :Boolean; override;
  public
    { Public declarations }
  end;

var
  frmCadCategoria: TfrmCadCategoria;

implementation

{$R *.dfm}



procedure TfrmCadCategoria.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  inherited;
   if Assigned(oCategoria) then
      FreeAndNil(oCategoria);
end;

procedure TfrmCadCategoria.FormCreate(Sender: TObject);
begin
  inherited;
  oCategoria:=TCategoria.Create(dtmPrincipal.ConexaoDB);

  IndiceAtual:= 'descricao';
end;

{$region 'override'}

  function TfrmCadCategoria.APagar: Boolean;
  begin
        Result := oCategoria.Apagar;
  end;

  function TfrmCadCategoria.Gravar(EstadoDoCadastro: TEstadoDoCadastro): Boolean;
  begin
      if (EstadoDoCadastro=ecInserir) then
        result := oCategoria.Gravar
      else if(EstadoDoCadastro=ecAlterar) then
        result := oCategoria.Atualizar;

  end;

{$endRegion}

end.
